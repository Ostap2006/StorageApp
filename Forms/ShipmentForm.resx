<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>